name: Build package
on:
  pull_request:
  push:
    branches:
    - main
permissions:
  contents: read
  id-token: write
jobs:
  macos:
    runs-on: macos-11
    environment: aws
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    - name: Set up Ruby 2.6
      uses: actions/setup-ruby@v1
      with:
        ruby-version: 2.6

    - name: Install app certificates
      id: instcert
      uses: apple-actions/import-codesign-certs@v2
      with:
        p12-file-base64: ${{ secrets.ITERATIVE_APPLICATION_CERT }}
        p12-password: ${{ secrets.ITERATIVE_APPLICATION_CERT_PASS }}

    - name: Install installer certificates
      uses: apple-actions/import-codesign-certs@v2
      with:
        create-keychain: false 
        keychain-password: ${{ steps.instcert.keychain-password }}
        p12-file-base64: ${{ secrets.ITERATIVE_INSTALLER_CERT }}
        p12-password: ${{ secrets.ITERATIVE_INSTALLER_CERT_PASS }}

    - name: Check certificates
      run: |
        #security set-key-partition-list -S 'apple-tool:,apple:,codesign:,productsign:' -s -k 123456 build.keychain
        security find-identity -v
    - name: Check signing
      run: |
        which codesign
        which productsign
        codesign -f -s 62687162A75C39558A9EA17B57E8C65306BABE92 upload.py
    - name: Install requirements
      run: |
        pip install wheel
        pip install -r requirements.txt
        brew install mitchellh/gon/gon
    - name: Download dvc pkg
      run: python download.py
    - name: Install dvc requirements
      run: |
        # available lxml (webdav dependency) wheels are built with an old
        # SDK, which breaks osxpkg notarization. Building from scratch
        # instead.
        pip install ./dvc[all] --no-binary lxml
        pip install -r dvc/scripts/build-requirements.txt
        gem install --no-document fpm

    - name: Build binary
      run: |
        echo 'PKG = "osxpkg"' > dvc/dvc/utils/build.py
        python dvc/scripts/pyinstaller/build.py
        cp -a dvc/scripts/pyinstaller/dist dist

    - name: Sign binary
      run: python sign_bin.py --application-id 62687162A75C39558A9EA17B57E8C65306BABE92 --keychain build.keychain

    - name: Build installer
      run: python build_installer.py

#    - name: Sign installer
#      run: python sign_installer.py --installer-id 374191642324A98B1D9835CCD256EDEE2C710051 --keychain build.keychain
#
    - name: Notarize installer
      env:
        APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
      run: python notarize_installer.py --apple-id-username kupruser@gmail.com --apple-id-password $APPLE_ID_PASSWORD

    - uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: us-east-2
        role-to-assume: arn:aws:iam::260760892802:role/dvc-public-osxpkg-deployer

    - name: Upload
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
      run: python upload.py dvc/scripts/fpm/dvc-*.pkg
